{"meta":{"title":"leopold's site","subtitle":"网站副标题","description":"web html5 javascript","author":"梁朕","url":"https://lenisleopold.github.io"},"pages":[],"posts":[{"title":"markdown语法简单教程","slug":"markdown语法简单教程","date":"2018-08-13T07:52:43.000Z","updated":"2018-08-13T08:29:38.026Z","comments":true,"path":"2018/08/13/markdown语法简单教程/","link":"","permalink":"https://lenisleopold.github.io/2018/08/13/markdown语法简单教程/","excerpt":"","text":"标题1234567# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题展示效果如下 一级标题二级标题三级标题四级标题五级标题六级标题 注释123456789101112[](第一种注释)aaa[这里可以写任何东西]:第二种注释bbb&lt;!--第三种注释--&gt;ccc展示效果如下 aaa bbb ccc 无序列表以-、+、*这三个字符开头的行是无序列表项12345678910111213+ q+ w+ e- a- b- c* q* w* e展示效果如下 q w e a b c q w e 嵌套列表1234567891011+ q + w + e - a - b - c * q * w * e展示效果如下 q w e a b c q w e 有序列表1231. wdewdwed2. swdc展示效果如下 wdewdwed swdc 文字加粗和斜体1234**加粗**的文字*斜体*展示效果如下 加粗的文字 斜体 代码块123456789101112131415`行内代码块` 第二种代码块,四个空格开头的也是代码块 function a()&#123; &#125;\\`\\`\\`第三种代码块function b()&#123; &#125;\\`\\`\\` \\是为了转义，书写时是没有的展示效果如下 行内代码块 四个空格开头的也是代码块，第二种代码块 function a(){ } 1234第三种代码块function b()&#123; &#125; 引用1234567&gt; 引用一段引用&gt; 第一层&gt;&gt; 第二层&gt;&gt;&gt; 第三层展示效果如下 引用和多层引用一段引用 第一层 第二层 第三层 图片123![alt属性](https://www.baidu.com/img/baidu_jgylogo3.gif &quot;title属性&quot;)展示效果如下 横线1`---`和`***`和`___`都是横线 链接12345直接链接 http://www.baidu.com超链接 More info: [被引用的文字](https://hexo.io/docs/generating.html &quot;my title&quot;)展示效果如下 直接链接 http://www.baidu.com 超链接 More info: 被引用的文字 表格1234567891011121314151617181920212223 name | age | sex :-------:|:-----|-----: tony | 20 | 男 lucy | 18 | 女 tony | 20 | 男 lucy | 18 | 女 表头1 | 表头2---------|-----表格1 | 表格2表格3 | 表格4第二行的--|--|--特别重要，决定了是否是一个表格`:-------:`居中对齐，即同时左对齐和右对齐`:-------`左对齐`--------:`右对齐展示效果如下 name age sex tony 20 男 lucy 18 女 tony 20 男 lucy 18 女 表头1 表头2 表格1 表格2 表格3 表格4 删除线12~~删除线 价格$19.99~~展示效果如下 删除线 价格$19.99","categories":[{"name":"前端周边","slug":"前端周边","permalink":"https://lenisleopold.github.io/categories/前端周边/"}],"tags":[{"name":"markdown语法","slug":"markdown语法","permalink":"https://lenisleopold.github.io/tags/markdown语法/"}],"keywords":[{"name":"前端周边","slug":"前端周边","permalink":"https://lenisleopold.github.io/categories/前端周边/"}]},{"title":"使用hexo创建github博客","slug":"使用hexo创建github博客","date":"2018-08-13T07:10:45.000Z","updated":"2018-08-13T07:10:45.000Z","comments":true,"path":"2018/08/13/使用hexo创建github博客/","link":"","permalink":"https://lenisleopold.github.io/2018/08/13/使用hexo创建github博客/","excerpt":"","text":"1：要先拥有一个https://username.github.io 空间, 这个很简单，请自行百度。 2：安装node，yarn(不必须，用npm 也可以) 3：安装 hexo-cli yarn global add hexo-cli 安装一些插件12yarn add hexo-server hexo-deployer-git hexo-generator-archive hexo-generator-category hexo-generator-index hexo-generator-json-content@2.2.0 hexo-generator-tagyarn add hexo-renderer-ejs hexo-renderer-less hexo-renderer-jade hexo-renderer-maked hexo-renderer-stylus 4：创建项目hexo init &lt;项目名称&gt;新建一个网站cd &lt;项目名称&gt;yarn install 5，网站的配置文件 _config.yml详细参数参见https://hexo.io/zh-cn/docs/configuration 6，上传配置在 _config.yml 中修改参数，一个正确的部署配置中至少要有 type 参数 同时使用多个 deployer，Hexo 会依照顺序执行每个 deployer，repo即上传地址1234567deploy: -type: git repo: https://github.com/username/username.github.io.git branch: master -type: heroku repo: branch: 7，主题配置从 https://hexo.io/themes/ 下载主题；根据主题的说明进行安装。主题文件夹要放在themes文件夹下，跟landscape并列_config.yml的theme字段要改为自定义主题的文件夹名称 8，评论有很多种类型，这里只介绍valine评论的设置 valine评论 配置文档 https://valine.js.org/configuration.html valine是基于leancloud的。在https://leancloud.cn 注册并登录，创建应用。在leancloud的设置-应用key，复制appid和appkey，填到valine的设置里。设置-安全中心-web安全域名填写自己的域名，否则评论组件会显示403权限问题。valine使用gravatar头像系统 https://en.gravatar.com 。在基于valine的评论中，你选用的邮箱会自动去匹配在gravatar中设置的头像。 1234567891011valine: enable: true appId: mgCAdSHToEJRc2FoFbWnWl3h-gzGzoHsz appKey: 2u5UYgTFA3DjKyruRKb6X9FH placeholder: 说点什么吧 notify: false 邮箱通知 verify: false 验证码 avatar: robohash 系统头像之一，有自定义头像会替换这个默认头像 meta: nick,mail,link 评论框顶部显示&quot;昵称\\邮箱\\网址&quot; pageSize: 15 visitor: true 访问量统计 9：命令创建文章：hexo new [layout] &lt;title&gt; 使用指定的布局新建一篇文章，layout布局，title文章名称。layout指向 /scaffolds目录下的布局文件的文件名,即post.md,draft.md,page.md,以及自定义的布局。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。使用post布局生成的文件会出现在source/_posts中，使用draft布局生成的文件会出现在source/_draft中，使用page布局及自定义布局生成的文件，都直接出现在source文件夹中。 hexo publish post 草稿文件名 将草稿文件从source/_drafts移动到source/_posts hexo generate 生成静态文件 可以简写为hexo g。参数： -d, –deploy 文件生成后立即部署网站 -w, –watch 监视文件变动。 hexo publish [layout] &lt;filename&gt; 发表草稿 hexo server 启动服务器，默认4000端口。参数：-p, –port重设端口。-s, –static只使用静态文件。-l, –log启动日记记录，使用覆盖记录格式 hexo deploy 部署网站。参数：-g, –generate，部署之前要先生成静态文件。简写hexo d。上传的位置是config.yml中的deploy下面的repo字段的地址 hexo render &lt;file1&gt; [file2] … 渲染文件。参数： -o, –output设置输出路径。 hexo clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），您可能需要运行该命令。 hexo list &lt;type&gt; 列出网站资料。 hexo version 显示 Hexo 版本。 hexo --draft 显示 source/_drafts 文件夹中的草稿文章 总结一下，最常用的命令是：hexo new [layout] &lt;title&gt; 使用指定的布局新建一篇文章hexo clean &amp;&amp; hexo g -w 清除缓存，生成静态文件，监听文件变化hexo d 上传部署到网站上 由于生成的文章是markdown语法的.md文件，所以编辑文章的话，需要对markdown语法有一定了解。markdown语法使用的简单教程,请看下一篇文章。","categories":[{"name":"前端周边","slug":"前端周边","permalink":"https://lenisleopold.github.io/categories/前端周边/"}],"tags":[{"name":"github","slug":"github","permalink":"https://lenisleopold.github.io/tags/github/"},{"name":"markdown","slug":"markdown","permalink":"https://lenisleopold.github.io/tags/markdown/"},{"name":"博客","slug":"博客","permalink":"https://lenisleopold.github.io/tags/博客/"}],"keywords":[{"name":"前端周边","slug":"前端周边","permalink":"https://lenisleopold.github.io/categories/前端周边/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-08-09T02:35:06.669Z","updated":"2018-08-13T07:53:35.682Z","comments":true,"path":"2018/08/09/hello-world/","link":"","permalink":"https://lenisleopold.github.io/2018/08/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy hello 1world More info: Deployment aaaaaaaa bbbbbbb cccccc","categories":[],"tags":[],"keywords":[]}]}